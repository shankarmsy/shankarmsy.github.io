<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>It's all in the data (base R graphics)</title><link>https://shankarmsy.github.io/</link><description></description><atom:link href="https://shankarmsy.github.io/categories/base-r-graphics.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Tue, 24 Feb 2015 15:47:23 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Exploratory Visualizations part-3 - Styling matplotlib</title><link>https://shankarmsy.github.io/posts/exploringviz3.html</link><dc:creator>Shankar Muthuswamy</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In the first two posts of this series I did a compare and contrast of out-of-the-box look and feel of Matplotlib and compared it with base R graphics and the ever so awesome ggplot2. In this post, I'll explore some options to make matplotlib plots prettier, or in other words look more like ggplot2.&lt;/p&gt;
&lt;p&gt;Let's get right to it by importing the required packages.&lt;/p&gt;&lt;p&gt;&lt;a href="https://shankarmsy.github.io/posts/exploringviz3.html"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>R</category><category>base R graphics</category><category>brewer2mpl</category><category>colorbrewer</category><category>ggplot2</category><category>matplotlib</category><category>pandas</category><category>python</category><category>seaborn</category><category>style</category><category>visualization</category><guid>https://shankarmsy.github.io/posts/exploringviz3.html</guid><pubDate>Fri, 02 Jan 2015 19:25:01 GMT</pubDate></item><item><title>Exploratory Visualizations part-1 - matplotlib vs base R</title><link>https://shankarmsy.github.io/posts/exploringviz1.html</link><dc:creator>Shankar Muthuswamy</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In these series of posts, I will try to visually compare and contrast visualization tools focusing specifically on Python and R. We will look at a wide array of tools such as matplotlib, base graphics in R, lattice, ggplot2 and visually pit them against each other by creating some simple visualizations. Later we will turn our attention to matplotlib and implement some ideas to make its visualizations more impressive. This isn't meant to be a tutorial (there's plenty out there) but hopefully there's a trick or two along the way that's helpful.&lt;/p&gt;
&lt;p&gt;In this first post, we will begin by comparing matplotlib with the base graphics package in R.&lt;/p&gt;
&lt;p&gt;To start with we will use a simple dataset that provides specifications for 428 new vehicles for the year 2004. This dataset has been used for a number of statistics courses since the results are easier for everyone to relate to. We however will use the data to focus on the tools rather than focus on the data itself.&lt;/p&gt;
&lt;p&gt;Let's go!&lt;/p&gt;&lt;p&gt;&lt;a href="https://shankarmsy.github.io/posts/exploringviz1.html"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>R</category><category>base R graphics</category><category>ggplot2</category><category>matplotlib</category><category>pandas</category><category>python</category><category>visualization</category><guid>https://shankarmsy.github.io/posts/exploringviz1.html</guid><pubDate>Tue, 16 Dec 2014 12:30:01 GMT</pubDate></item></channel></rss>